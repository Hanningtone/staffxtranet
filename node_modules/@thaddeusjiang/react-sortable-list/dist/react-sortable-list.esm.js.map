{"version":3,"file":"react-sortable-list.esm.js","sources":["../src/components/SortableList/SortableItem.tsx","../src/components/SortableList/SortableList.tsx"],"sourcesContent":["import React from 'react';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { SortableItemProps } from './SortableList';\n\nexport const SortableItem = (props: SortableItemProps) => {\n  const { DragHandler, className } = props;\n  const { attributes, listeners, setNodeRef, transform, transition } =\n    useSortable({ id: props.id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return DragHandler ? (\n    <div ref={setNodeRef} style={style} className={className}>\n      <DragHandler {...attributes} {...listeners} />\n      {props.children}\n    </div>\n  ) : (\n    <div\n      ref={setNodeRef}\n      style={style}\n      {...attributes}\n      {...listeners}\n      className={className}\n    >\n      {props.children}\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n} from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  verticalListSortingStrategy,\n  horizontalListSortingStrategy,\n} from '@dnd-kit/sortable';\n\nimport { SortableItem } from './SortableItem';\n\nexport type SortableItemProps = {\n  id: string;\n  DragHandler?: FC;\n  className?: string;\n} & {\n  [key: string]: any;\n};\n\nexport type ItemRenderProps = {\n  item: SortableItemProps;\n};\n\nexport type ChildrenProps = {\n  items: SortableItemProps[];\n};\n\nexport type SortableListProps = {\n  items: SortableItemProps[];\n  setItems: React.Dispatch<React.SetStateAction<SortableItemProps[]>>;\n  itemRender?: ({ item }: ItemRenderProps) => JSX.Element;\n  children?: ({ items }: ChildrenProps) => JSX.Element;\n  horizontal?: boolean;\n};\n\n// TODO: Headless UI Component\nexport const SortableList: FC<SortableListProps> = (props) => {\n  const { items, setItems, children, itemRender, horizontal } = props;\n\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={closestCenter}\n      onDragEnd={handleDragEnd}\n    >\n      <SortableContext\n        items={items}\n        strategy={\n          horizontal\n            ? horizontalListSortingStrategy\n            : verticalListSortingStrategy\n        }\n      >\n        {children\n          ? children({ items })\n          : items.map((item) => {\n              return (\n                <SortableItem key={item.id} id={item.id}>\n                  {/* @ts-ignore */}\n                  {itemRender({ item })}\n                </SortableItem>\n              );\n            })}\n      </SortableContext>\n    </DndContext>\n  );\n\n  function handleDragEnd(event: { active: any; over: any }) {\n    const { active, over } = event;\n\n    if (active.id !== over.id) {\n      setItems((items: SortableItemProps[]) => {\n        const ids = items.map((item: SortableItemProps) => item.id);\n        const oldIndex = ids.indexOf(active.id);\n        const newIndex = ids.indexOf(over.id);\n\n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  }\n};\n"],"names":["SortableItem","props","DragHandler","className","useSortable","id","attributes","listeners","setNodeRef","transform","transition","style","CSS","Transform","toString","React","ref","children","SortableList","items","setItems","itemRender","horizontal","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","DndContext","collisionDetection","closestCenter","onDragEnd","handleDragEnd","SortableContext","strategy","horizontalListSortingStrategy","verticalListSortingStrategy","map","item","key","event","active","over","ids","oldIndex","indexOf","newIndex","arrayMove"],"mappings":"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"}