function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}import React from"react";import PropTypes from"prop-types";import reactCSS from"reactcss";import Swatch from"../common/Swatch";import{flexContent}from"../common/styleFlex";var SketchPresetColors=function(a){var b=a.colors,c=a.onClick,d=a.onSwatchHover,e=reactCSS({default:{colors:{margin:"0 -10px",padding:"10px 0 0 10px",borderTop:"1px solid #eee",position:"relative"},swatchWrap:{width:"16px",height:"16px",margin:"0 10px 10px 0"},swatch:{borderRadius:"3px",boxShadow:"inset 0 0 0 1px rgba(0,0,0,.15)"}},"no-presets":{colors:{display:"none"}}},{"no-presets":!b||!b.length}),f=function(a,b){c({hex:a,source:"hex"},b)};return/*#__PURE__*/React.createElement("div",{style:_objectSpread(_objectSpread({},flexContent),e.colors),className:"flexbox-fix"},b.map(function(a){var b="string"==typeof a?{color:a}:a,c="".concat(b.color).concat(b.title||"");return/*#__PURE__*/React.createElement("div",{key:c,style:e.swatchWrap},/*#__PURE__*/React.createElement(Swatch,_extends({},b,{style:e.swatch,onClick:f,onHover:d,focusStyle:{boxShadow:"inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px ".concat(b.color)}})))}))};SketchPresetColors.propTypes={colors:PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string,PropTypes.shape({color:PropTypes.string,title:PropTypes.string})])).isRequired,onClick:PropTypes.func,onSwatchHover:PropTypes.func},SketchPresetColors.defaultProps={onClick:function onClick(){},onSwatchHover:function onSwatchHover(){}};export default SketchPresetColors;