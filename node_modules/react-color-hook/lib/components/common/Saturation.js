import React,{useRef,useEffect}from"react";import throttle from"lodash/throttle";import PropTypes from"prop-types";import calculateChange from"../../helpers/saturation";import{saturationStyle}from"./commonStyles";var Saturation=function(a){var b=useRef(),c=throttle(function(a,b,c){a(b,c)},50),d=function(d){c(a.onChange,calculateChange(d,a.hsl,b.current),d)},f=function(){window.removeEventListener("mousemove",d),window.removeEventListener("mouseup",f)};useEffect(function(){return function(){c.cancel(),f()}},[]);var g=a.style,h=a.hsl,i=a.radius,j=a.shadow,k=a.hsv,l=a.pointer,m=g.color,n=g.white,o=g.black,p=g.circle,q=saturationStyle(h,i,j,k,m,n,o,p,g.pointer,g),r=l;return/*#__PURE__*/React.createElement("div",{role:"button",tabIndex:0,style:q.color,ref:b,onMouseDown:function handleMouseDown(a){d(a),window.addEventListener("mousemove",d),window.addEventListener("mouseup",f)},onTouchMove:d,onTouchStart:d},/*#__PURE__*/React.createElement("style",null,"\n        .saturation-white {\n          background: -webkit-linear-gradient(to right, #fff, rgba(255,255,255,0));\n          background: linear-gradient(to right, #fff, rgba(255,255,255,0));\n        }\n        .saturation-black {\n          background: -webkit-linear-gradient(to top, #000, rgba(0,0,0,0));\n          background: linear-gradient(to top, #000, rgba(0,0,0,0));\n        }\n      "),/*#__PURE__*/React.createElement("div",{style:q.white,className:"saturation-white"},/*#__PURE__*/React.createElement("div",{style:q.black,className:"saturation-black"}),/*#__PURE__*/React.createElement("div",{style:q.pointer},r?/*#__PURE__*/React.createElement(r,a):/*#__PURE__*/React.createElement("div",{style:q.circle}))))};Saturation.defaultProps={radius:"",shadow:"",style:{pointer:"",color:"",white:"",black:"",circle:""},pointer:null,onChange:function onChange(){}},Saturation.propTypes={onChange:PropTypes.func,hsl:PropTypes.shape({h:PropTypes.number,v:PropTypes.number,s:PropTypes.number}).isRequired,style:PropTypes.shape({pointer:PropTypes.string,color:PropTypes.string,white:PropTypes.string,black:PropTypes.string,circle:PropTypes.string}),hsv:PropTypes.shape({v:PropTypes.number,s:PropTypes.number}).isRequired,pointer:PropTypes.func,shadow:PropTypes.string,radius:PropTypes.string};export default Saturation;